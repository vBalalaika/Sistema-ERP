@using Microsoft.AspNetCore.Mvc.Localization
@using ERP.Web.Areas.Logistics.Models
@inject IHtmlLocalizer<ERP.Language.SharedResource> localizer
@model IncomeHeaderViewModel
@{
    int index = 1;
}

<form id="create-form" method="post" asp-controller="Income" asp-action="OnPostCreateOrEdit" asp-route-id="@Model.Id" enctype="multipart/form-data">

    @Html.HiddenFor(x => x.ConcurrencyToken)

    <div class="form-row pb-3">
        <div class="col-md-2 mb-3">
            <label asp-for="IncomeDate" class="control-label">@localizer["Income date"]</label>
            <input asp-for="IncomeDate" name="IncomeDate" type="date" class="form-control" id="IncomeDate">
            <span asp-validation-for="IncomeDate" class="text-danger"></span>
        </div>
        <div class="col-md-4 mb-3">
            <label asp-for="ProviderId" class="control-label">@localizer["Provider"]</label>
            <select name="ProviderId" class="form-control select2bs4" id="Providers" asp-for="ProviderId" asp-items="@Model.Providers">
                <option value="-1">@localizer["Select provider"]</option>
            </select>
            <span asp-validation-for="ProviderId" class="text-danger"></span>
        </div>
        <div class="col-auto mb-3 mt-1 align-self-end text-center">
            <a class="btn action-btn">
                <div class="custom-control custom-checkbox small">
                    <input asp-for="OwnTransport" name="OwnTransport" class="custom-control-input" type="checkbox" id="checkOwnTransport">
                    <label asp-for="OwnTransport" class="custom-control-label" for="checkOwnTransport">Transporte propio</label>
                </div>
            </a>
        </div>
        @*@if (!Model.OwnTransport)
        {*@
            <div id="divTransportProvider" class="col-md-4 mb-3">
                <label asp-for="TransportProviderId" class="control-label">@localizer["Transport"]</label>
                <select name="TransportProviderId" class="form-control select2bs4" id="TransportProviders" asp-for="TransportProviderId" asp-items="@Model.TransportProviders">
                    <option value="-1">@localizer["Select transport"]</option>
                </select>
                <span asp-validation-for="TransportProviderId" class="text-danger"></span>
            </div>
        @*}*@
    </div>

    <div class="form-row border-bottom">
        <div class="col-md-2 mb-4">
            <label asp-for="DeliveryNoteNumber" class="control-label">Nº Remito</label>
            <input asp-for="DeliveryNoteNumber" name="DeliveryNoteNumber" type="text" class="form-control" id="DeliveryNoteNumber">
            <span asp-validation-for="DeliveryNoteNumber" class="text-danger"></span>
        </div>
        <div class="col-md-2 mb-4">
            <label asp-for="InvoiceNumber" class="control-label">Nº Factura</label>
            <input asp-for="InvoiceNumber" name="InvoiceNumber" type="text" class="form-control" id="InvoiceNumber">
            <span asp-validation-for="InvoiceNumber" class="text-danger"></span>
        </div>
        <div class="col-md-4 mb-4">
            <label asp-for="ExternalProcessStationId" class="control-label">@localizer["External process"]</label>
            <select name="ExternalProcessStationId" class="form-control select2bs4" id="ExternalProcessStations" asp-for="ExternalProcessStationId" asp-items="@Model.ExternalProcessStations">
                <option value="-1">@localizer["Select external process"]</option>
            </select>
            <span asp-validation-for="ExternalProcessStationId" class="text-danger"></span>
        </div>

    </div>

    <div class="form-row mt-2">

        @if (Model.Id == 0)
        {
            <div class="col-md-6 mb-3 mt-3">
                <label class="control-label">@localizer["Code"] - @localizer["Product"]</label>
                <select class="form-control select2bs4" id="Products">
                    <option value="-1">@localizer["Select product"]</option>
                </select>
            </div>
            <div class="col-md-2 mb-3 mt-3">
                <label class="control-label">@localizer["Quantity"]</label>
                <input name="Quantity" type="text" class="form-control text-center" id="Quantity" onkeypress="return validateIsNumber(event);" value="0,00">
                @*<input name="Quantity" type="text" class="form-control text-center" id="Quantity" value="1" onkeydown="if(event.key==='.'){event.preventDefault();}" oninput="event.target.value = event.target.value.replace(/[^0-9]*/g,'');">*@
            </div>
            <div class="col-md-2 mb-3 mt-3">
                <label class="control-label">@localizer["Unit"]</label>
                <select class="form-control select2bs4" id="Units" disabled>
                    <option value="-1">@localizer["Select unit measure"]</option>
                </select>
            </div>
            <div class="col-md-2 mb-3 mt-3">
                <label class="control-label">Nº @localizer["Batch"]</label>
                <input name="Batch" type="text" class="form-control" id="Batch">
            </div>

            <div class="col-md-2 mb-3">
                <label class="control-label">Nº OT</label>
                <input name="OTNumber" type="text" class="form-control" id="OTNumber">
            </div>
            <div class="col-md-2 mb-3">
                <label class="control-label">Nº @localizer["Product"]</label>
                <input name="ProductNumber" type="text" class="form-control" id="ProductNumber">
            </div>
            <div class="col-md-4 mb-3">
                <label class="control-label">@localizer["Father product"]</label>
                <select class="form-control select2bs4" id="FatherProducts" disabled>
                    <option value="-1">@localizer["Select product"]</option>
                </select>
            </div>
            <div class="col-md-4 mb-3">
                <label class="control-label">@localizer["Configuration"]</label>
                <select class="form-control select2bs4" id="Configurations" disabled>
                    <option value="-1">@localizer["Select configuration"]</option>
                </select>
            </div>

            <div class="col-md-2 mb-3">
                <label class="control-label">Nº OC</label>
                <input name="OCNumber" type="text" class="form-control" id="OCNumber">
            </div>
            <div class="col-md-2 mb-3">
                <label class="control-label">@localizer["Weight"]</label>
                <input name="Weight" type="text" class="form-control text-center" id="Weight" onkeypress="return validateIsNumber(event);" value="0,00">
            </div>
            <div class="col-md-4 mb-3 d-none">
                <label class="control-label">@localizer["State"]</label>
                <select class="form-control select2bs4" id="IncomeStates" disabled>
                    <option value="-1">@localizer["Select income state"]</option>
                </select>
            </div>
            <div id="divBtnAdd" class="col-md-1 mb-3 pr-0">
                <label class="control-label">@localizer["Add"]</label>
                <button id="btn-add-detail" type="button" class="form-control btn btn-primary w-50"><i class="fas fa-plus"></i></button>
            </div>
        }

        <div id="table-div" class="col-md-12 p-0">
            <div class="row d-flex col-md-12 ml-1">
                <label class="card-title text-capitalize mb-3">@localizer["Details"]</label>
            </div>

            <div class="col-md-12 table-responsive">
                <table class="table table-striped-blue nowrap" id="incomeDetailsTable">
                    <thead class="bg-thead">
                        <tr class="text-nowrap">
                            <th width="2%">@localizer["Code"]</th>
                            <th width="10%">@localizer["Product"]</th>
                            <th width="2%" class="text-center">@localizer["Quantity"]</th>
                            <th width="5%">@localizer["Unit"]</th>
                            <th width="5%">Nº @localizer["Batch"]</th>
                            <th class="d-none">Nº OT</th>
                            <th width="5%">Nº @localizer["Product"]</th>
                            <th width="5%">@localizer["Father product"]</th>
                            <th width="5%">@localizer["Configuration"]</th>
                            <th width="2%">Nº OC</th>
                            <th width="5%">@localizer["Weight"] (Kg.)</th>
                            <th class="d-none">@localizer["State"]</th>
                            @if (Model.Id == 0)
                            {
                                <th width="2%">@localizer["Delete"]</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.IncomeDetails != null)
                        {
                            @foreach (var item in Model.IncomeDetails)
                            {
                                string itWasFinishedReadonlyAttr = item.IncomeStateId == 3 || item.IncomeStateId == 2 ? "readonly" : "";

                                <tr>
                                    <td class="d-none">
                                        <input type="hidden" name="IncomeDetails.Index" readonly value="@index" />
                                        <input type="hidden" name="IncomeDetails[@index].Id" value="@item.Id" readonly />
                                        <input type="hidden" name="IncomeDetails[@index].ConcurrencyToken" value="@item.ConcurrencyToken" readonly />
                                        <input type="hidden" name="IncomeDetails[@index].IncomeHeaderId" value="@item.IncomeHeaderId" readonly />
                                        <input type="hidden" name="IncomeDetails[@index].IncomeProductId" value="@item.IncomeProductId" readonly />
                                        <input type="hidden" name="IncomeDetails[@index].UnitId" value="@item.UnitId" readonly />
                                        <input type="hidden" name="IncomeDetails[@index].FatherProductId" value="@item.FatherProductId" readonly />
                                        <input type="hidden" name="IncomeDetails[@index].FatherStructureId" value="@item.FatherStructureId" readonly />
                                        <input type="hidden" name="IncomeDetails[@index].IncomeStateId" value="@item.IncomeStateId" readonly />
                                    </td>

                                    @if (item.IncomeProduct != null)
                                    {
                                        <td><input type="text" class="custom-form-control form-control" name="IncomeDetails[@index].ProductCode" readonly value="@item.IncomeProduct.Code" /></td>
                                        <td><input type="text" class="custom-form-control form-control" name="IncomeDetails[@index].ProductDescription" readonly value="@item.IncomeProduct.Description" /></td>
                                    }
                                    else
                                    {
                                        <td><input type="text" class="custom-form-control form-control" name="IncomeDetails[@index].ProductCode" readonly /></td>
                                        <td><input type="text" class="custom-form-control form-control" name="IncomeDetails[@index].ProductDescription" readonly /></td>
                                    }

                                    <td><input type="text" class="custom-form-control form-control text-center" name="IncomeDetails[@index].Quantity" readonly value="@Math.Round(item.Quantity, 2)" onkeypress="return validateIsNumber(event);" /></td>

                                    @if (item.Unit != null)
                                    {
                                        <td><input type="text" class="custom-form-control form-control" name="IncomeDetails[@index].UnitDescription" readonly value="@item.Unit.Description" /></td>
                                    }
                                    else
                                    {
                                        <td><input type="text" class="custom-form-control form-control" name="IncomeDetails[@index].UnitDescription" readonly /></td>
                                    }

                                    <td><input type="text" @itWasFinishedReadonlyAttr class="form-control" name="IncomeDetails[@index].BatchNumber" value="@item.BatchNumber" /></td>
                                    <td class="d-none"><input type="text" class="custom-form-control form-control" name="IncomeDetails[@index].OTNumber" readonly value="@item.OTNumber" /></td>
                                    <td><input type="text" class="custom-form-control form-control" name="custom-form-control IncomeDetails[@index].ProductNumber" readonly value="@item.ProductNumber" /></td>

                                    @if (item.FatherProduct != null)
                                    {
                                        <td><input type="text" class="custom-form-control form-control" name="IncomeDetails[@index].FatherProductCodeAndDescription" readonly value="@item.FatherProduct.Code - @item.FatherProduct.Description" /></td>
                                    }
                                    else
                                    {
                                        <td><input type="text" class="custom-form-control form-control" name="IncomeDetails[@index].FatherProductCodeAndDescription" readonly /></td>
                                    }

                                    @if (item.FatherStructure != null)
                                    {
                                        <td><input type="text" class="custom-form-control form-control" name="IncomeDetails[@index].FatherStructure" readonly value="@item.FatherStructure.Description" /></td>
                                    }
                                    else
                                    {
                                        <td><input type="text" class="custom-form-control form-control" name="IncomeDetails[@index].FatherStructure" readonly /></td>
                                    }

                                    <td><input type="text" class="custom-form-control form-control" name="IncomeDetails[@index].OCNumber" readonly value="@item.OCNumber" /></td>
                                    <td><input type="text" @itWasFinishedReadonlyAttr class="weight form-control text-center" name="IncomeDetails[@index].Weight" value="@Math.Round(item.Weight, 2)" /></td>

                                    @if (item.IncomeState != null)
                                    {
                                        <td class="d-none"><input type="text" class="custom-form-control form-control" name="IncomeDetails[@index].IncomeState" readonly value="@item.IncomeState.Description" /></td>
                                    }
                                    else
                                    {
                                        <td class="d-none"><input type="text" class="custom-form-control form-control" name="IncomeDetails[@index].IncomeState" readonly /></td>
                                    }

                                    @if (Model.Id == 0)
                                    {
                                        <td><button type="button" id="btn-remove-@index" class="btn btn-outline-danger btn-remove d-block m-auto"><img class="action-img-icon" src="../../../images/Eliminar.svg" width="20" height="20" /></button></td>
                                    }
                                </tr>

                                index++;
                            }
                        }
                    </tbody>
                </table>
            </div>

        </div>

    </div>

    <div class="col-md-12 mb-3 mt-3">
        <label asp-for="Comments" class="control-label">@localizer["Comments"]</label>
        <textarea asp-for="Comments" name="Comments" class="form-control" id="Comments" rows="5"></textarea>
    </div>


    <div id="buttons-div" class="form-group justify-content-between">
        <button id="btn-save" type="submit" class="btn btn-primary">@localizer["Save"]</button>
        <button id="btn-cancel" type="button" class="btn btn-default close-button" data-dismiss="modal">@localizer["Cancel"]</button>
    </div>

</form>

<script type="text/javascript" language="javascript">
    $(document).ready(function () {
        $.validator.unobtrusive.parse(document);

        let trId = @index;
        let providers_select2 = $('#Providers');
        let transportProviders_select2 = $('#TransportProviders');
        let externalProcessStations_select2 = $('#ExternalProcessStations');
        let products_select2 = $('#Products');
        let units_select2 = $('#Units');
        let fatherProducts_select2 = $('#FatherProducts');
        let configurations_select2 = $('#Configurations');
        let incomeStates_select2 = $('#IncomeStates');

        $("#Quantity").val("0,00");
        $("#Weight").val("0,00");

        providers_select2.select2({
            theme: "bootstrap4",
            escapeMarkup: function (m) {
                return m;
            },
            sorter: function (data) {
                return data.sort(function (a, b) {
                    if (a.id != -1 && b.id != -1) {
                        if (a.text > b.text) {
                            return 1;
                        }
                        if (a.text < b.text) {
                            return -1;
                        }
                        return 0;
                    }

                });
            }
        });

        transportProviders_select2.select2({
            theme: "bootstrap4",
            escapeMarkup: function (m) {
                return m;
            },
            sorter: function (data) {
                return data.sort(function (a, b) {
                    if (a.id != -1 && b.id != -1) {
                        if (a.text > b.text) {
                            return 1;
                        }
                        if (a.text < b.text) {
                            return -1;
                        }
                        return 0;
                    }

                });
            }
        });

        externalProcessStations_select2.select2({
            theme: "bootstrap4",
            escapeMarkup: function (m) {
                return m;
            },
            sorter: function (data) {
                return data.sort(function (a, b) {
                    if (a.id != -1 && b.id != -1) {
                        if (a.text > b.text) {
                            return 1;
                        }
                        if (a.text < b.text) {
                            return -1;
                        }
                        return 0;
                    }

                });
            }
        });

        products_select2 = $('#Products').select2({
            language: "es",
            placeholder: '@localizer["Select product"]',
            theme: "bootstrap4",
            escapeMarkup: function (m) {
                return m;
            },
            ajax: {
                delay: 250,
                url: '/Logistics/Income/LoadProductsSelect2',
                data: function (params) {
                    return {
                        search: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: data.products
                    };
                },
                minimumInputLength: 2
            }
        });

        units_select2.select2({
            theme: "bootstrap4",
            escapeMarkup: function (m) {
                return m;
            },
            sorter: function (data) {
                return data.sort(function (a, b) {
                    if (a.id != -1 && b.id != -1) {
                        if (a.text > b.text) {
                            return 1;
                        }
                        if (a.text < b.text) {
                            return -1;
                        }
                        return 0;
                    }

                });
            }
        });

        fatherProducts_select2.select2({
            theme: "bootstrap4",
            escapeMarkup: function (m) {
                return m;
            },
            sorter: function (data) {
                return data.sort(function (a, b) {
                    if (a.id != -1 && b.id != -1) {
                        if (a.text > b.text) {
                            return 1;
                        }
                        if (a.text < b.text) {
                            return -1;
                        }
                        return 0;
                    }

                });
            }
        });

        configurations_select2.select2({
            theme: "bootstrap4",
            escapeMarkup: function (m) {
                return m;
            },
            sorter: function (data) {
                return data.sort(function (a, b) {
                    if (a.id != -1 && b.id != -1) {
                        if (a.text > b.text) {
                            return 1;
                        }
                        if (a.text < b.text) {
                            return -1;
                        }
                        return 0;
                    }

                });
            }
        });

        incomeStates_select2.select2({
            theme: "bootstrap4",
            escapeMarkup: function (m) {
                return m;
            },
            sorter: function (data) {
                return data.sort(function (a, b) {
                    if (a.id != -1 && b.id != -1) {
                        if (a.text > b.text) {
                            return 1;
                        }
                        if (a.text < b.text) {
                            return -1;
                        }
                        return 0;
                    }

                });
            }
        });

        loadUnits_select2(units_select2);
        loadIncomeStates_select2(incomeStates_select2);

        if ("@Model.OwnTransport" == "True")
        {
            $('#divTransportProvider').hide('slow');
        }
        else
        {
            $('#divTransportProvider').show('slow');
        }

        $('#checkOwnTransport').change(function () {
            if (this.checked) {
                $('#divTransportProvider').hide('slow');
            } else {
                $('#divTransportProvider').show('slow');
            }
        });

        $('#ProductNumber').focusout(function () {
            $.ajax({
                url: '/Logistics/Income/getFatherProductAndConfigByProductNumber',
                method: 'POST',
                data: { productNumber: $(this).val().toString().trim() },
                dataType: 'json',
                success: function (response) {
                    if (response.isValid) {

                        fatherProducts_select2.empty();
                        fatherProducts_select2.prop('disabled', false);
                        fatherProducts_select2.append($("<option />").val(-1).text('@localizer["Select product"]'));
                        $.each(response.fatherProducts, function (index, item) {
                            if (response.fatherProducts.length == 1) {
                                fatherProducts_select2.append($('<option />', { value: item.value, text: item.text }).attr('selected', true));
                            } else {
                                fatherProducts_select2.append($('<option />', { value: item.value, text: item.text }));
                            }
                        });

                        configurations_select2.empty();
                        configurations_select2.prop('disabled', false);
                        configurations_select2.append($("<option />").val(-1).text('@localizer["Select configuration"]'));
                        $.each(response.structures, function (index, item) {
                            if (response.structures.length == 1) {
                                configurations_select2.append($('<option />', { value: item.value, text: item.text }).attr('selected', true));
                            } else {
                                configurations_select2.append($('<option />', { value: item.value, text: item.text }));
                            }
                        });

                    } else {

                        fatherProducts_select2.empty();
                        fatherProducts_select2.prop('disabled', true);
                        fatherProducts_select2.append($("<option />").val(-1).text('@localizer["Select product"]'));

                        configurations_select2.empty();
                        configurations_select2.prop('disabled', true);
                        configurations_select2.append($("<option />").val(-1).text('@localizer["Select configuration"]'));

                    }

                }
            });
        });

        $('#btn-add-detail').on('click', function () {

            if ($("#Quantity").val() != "0" && $("#Quantity").val() != "0,00" && $("#Quantity").val() != "") {
                if (products_select2.val() != -1 && units_select2.val() != -1) {

                    let fatherProduct = ($("#FatherProducts").val() != -1) ? ($("#FatherProducts option:selected").text().substring(0, 6) + ' - ' + $("#FatherProducts option:selected").text().substring(9)) : "";
                    let config = ($("#Configurations").val() != -1) ? $("#Configurations option:selected").text() : "";

                    let trForTable = '<tr id="' + trId + '"> ';

                    trForTable += '<td class="d-none">' +
                        ' <input type="hidden" name="IncomeDetails.Index" value="' + trId + '" readonly />' +
                        '<input type="hidden" name="IncomeDetails.ConcurrencyToken" readonly />' +
                        '<input type="hidden" name="IncomeDetails[' + trId + '].IncomeProductId" value="' + products_select2.val() + '" readonly />' +
                        '<input type="hidden" name="IncomeDetails[' + trId + '].UnitId" value="' + units_select2.val() + '" readonly />' +
                        '<input type="hidden" name="IncomeDetails[' + trId + '].FatherProductId" value="' + fatherProducts_select2.val() + '" readonly />' +
                        '<input type="hidden" name="IncomeDetails[' + trId + '].FatherStructureId" value="' + configurations_select2.val() + '" readonly />' +
                        '<input type="hidden" name="IncomeDetails[' + trId + '].IncomeStateId" value="' + incomeStates_select2.val() + '" readonly />' +
                        '</td>';

                    trForTable += '<td><input type="text" class="custom-form-control form-control" name="IncomeDetails[' + trId + '].ProductCode" readonly value="' + $("#Products option:selected").text().substring(0, 6) + '" /></td>' +
                        '<td><input type="text" class="custom-form-control form-control" name="IncomeDetails[' + trId + '].ProductDescription" readonly value="' + $("#Products option:selected").text().substring(9) + '" /></td>' +
                        '<td><input type="text" class="custom-form-control form-control text-center" name="IncomeDetails[' + trId + '].Quantity" readonly value="' + $("#Quantity").val() + '" onkeypress="return validateIsNumber(event);" /></td>' +
                        '<td><input type="text" class="custom-form-control form-control" name="IncomeDetails[' + trId + '].UnitDescription" readonly value="' + $("#Units option:selected").text() + '" /></td>' +
                        '<td><input type="text" class="custom-form-control form-control text-center" name="IncomeDetails[' + trId + '].BatchNumber" readonly value="' + $("#Batch").val() + '" /></td>' +
                        '<td class="d-none"><input type="text" class="custom-form-control form-control text-center" name="IncomeDetails[' + trId + '].OTNumber" readonly value="' + $("#OTNumber").val() + '" /></td>' +
                        '<td><input type="text" class="custom-form-control form-control" name="IncomeDetails[' + trId + '].ProductNumber" readonly value="' + $("#ProductNumber").val() + '" /></td>' +
                        '<td><input type="text" class="custom-form-control form-control" name="IncomeDetails[' + trId + '].FatherProductCodeAndDescription" readonly value="' + fatherProduct + '" /></td>' +
                        '<td><input type="text" class="custom-form-control form-control" name="IncomeDetails[' + trId + '].FatherStructure" readonly value="' + config + '" /></td>' +
                        '<td><input type="text" class="custom-form-control form-control text-center" name="IncomeDetails[' + trId + '].OCNumber" readonly value="' + $("#OCNumber").val() + '" /></td>' +
                        '<td><input type="text" class="custom-form-control form-control text-center" name="IncomeDetails[' + trId + '].Weight" readonly value="' + $("#Weight").val() + '" /></td>' +
                        '<td class="d-none"><input type="text" class="custom-form-control form-control" name="IncomeDetails[' + trId + '].IncomeState" readonly value="' + $("#IncomeStates option:selected").text() + '" /></td>' +
                        '<td><button type="button" id="btn-remove-' + trId + '" class="btn btn-outline-danger btn-remove d-block m-auto"><img class="action-img-icon" src="../../../images/Eliminar.svg" width="20" height="20" /></button></td>' +
                        '</tr>';

                    $("#incomeDetailsTable tbody").append(trForTable);
                    trId += 1;

                    resetFields(products_select2, units_select2, fatherProducts_select2, configurations_select2, incomeStates_select2);

                } else {
                    alert("Falta información, por favor, debe seleccionar un producto y una unidad de medida.");
                }
            }
            else{
                alert("La cantidad debe ser mayor que cero.");
            }

        });

        $(document).on("click", ".btn-remove", function () {
            $(this).closest('tr').remove();
        });

        $("#Quantity").on({
            "focus": function (event) {
                $(event.target).select();
            },
            "keyup": function (event) {
                $(event.target).val(function (index, value) {
                    return value.replace(/\D/g, "")
                        //.replace(/^0+/, '0')
                        .replace(/([0-9])([0-9]{2})$/, '$1,$2')
                        .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ".");
                });
            },
            "change": function (event) {
                $(event.target).val(function (index, value) {
                    let valueAux = value;
                    if (!value.includes(",")) {
                        valueAux = value.concat(",00");
                    }
                    else {
                        valueAux = value;
                    }

                    if (value.charAt(0) == "0" && value.length == 1) {
                        valueAux = value.concat(",00");
                    }
                    else if (value.charAt(0) == "0" && value.charAt(1) != ",") {
                        if (value.charAt(1) == ".") {
                            valueAux = value.slice(2);
                        }
                        else if (value.charAt(2) == ".") {
                            valueAux = value.slice(1);
                        }
                        else {
                            valueAux = value.slice(1);
                        }
                    }

                    for (var i = 0; i < valueAux.length; i++) {
                        if (valueAux[i] != "0" && valueAux[i] != ".") {
                            let addZero = "";
                            if (valueAux[i] == ",") {
                                addZero = "0";
                            }
                            valueAux = addZero + valueAux.slice(i);
                            break;
                        }
                    }

                    return valueAux;
                });
            }
        });

        $("#Weight").on({
            "focus": function (event) {
                $(event.target).select();
            },
            "keyup": function (event) {
                $(event.target).val(function (index, value) {
                    return value.replace(/\D/g, "")
                        //.replace(/^0+/, '0')
                        .replace(/([0-9])([0-9]{2})$/, '$1,$2')
                        .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ".");
                });
            },
            "change": function (event) {
                $(event.target).val(function (index, value) {
                    let valueAux = value;
                    if (!value.includes(",")) {
                        valueAux = value.concat(",00");
                    }
                    else {
                        valueAux = value;
                    }

                    if (value.charAt(0) == "0" && value.length == 1) {
                        valueAux = value.concat(",00");
                    }
                    else if (value.charAt(0) == "0" && value.charAt(1) != ",") {
                        if (value.charAt(1) == ".") {
                            valueAux = value.slice(2);
                        }
                        else if (value.charAt(2) == ".") {
                            valueAux = value.slice(1);
                        }
                        else {
                            valueAux = value.slice(1);
                        }
                    }

                    for (var i = 0; i < valueAux.length; i++) {
                        if (valueAux[i] != "0" && valueAux[i] != ".") {
                            let addZero = "";
                            if (valueAux[i] == ",") {
                                addZero = "0";
                            }
                            valueAux = addZero + valueAux.slice(i);
                            break;
                        }
                    }

                    return valueAux;
                });
            }
        });
        
        document.querySelectorAll('.weight').forEach(item => {
            $(item).on({
                "focus": function (event) {
                    $(event.target).select();
                },
                "keyup": function (event) {
                    $(event.target).val(function (index, value) {
                        return value.replace(/\D/g, "")
                            //.replace(/^0+/, '0')
                            .replace(/([0-9])([0-9]{2})$/, '$1,$2')
                            .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ".");
                    });
                },
                "change": function (event) {
                    $(event.target).val(function (index, value) {
                        let valueAux = value;
                        if (!value.includes(",")) {
                            valueAux = value.concat(",00");
                        }
                        else {
                            valueAux = value;
                        }

                        if (value.charAt(0) == "0" && value.length == 1) {
                            valueAux = value.concat(",00");
                        }
                        else if (value.charAt(0) == "0" && value.charAt(1) != ",") {
                            if (value.charAt(1) == ".") {
                                valueAux = value.slice(2);
                            }
                            else if (value.charAt(2) == ".") {
                                valueAux = value.slice(1);
                            }
                            else {
                                valueAux = value.slice(1);
                            }
                        }

                        for (var i = 0; i < valueAux.length; i++) {
                            if (valueAux[i] != "0" && valueAux[i] != ".") {
                                let addZero = "";
                                if (valueAux[i] == ",") {
                                    addZero = "0";
                                }
                                valueAux = addZero + valueAux.slice(i);
                                break;
                            }
                        }

                        return valueAux;
                    });
                }
            });
        });

        $('#create-form').on('submit', function () {
            return jQueryModalPostWithRefresh(this, $('#incomesTable').DataTable());
        });

    });

    function resetFields(products_select2, units_select2, fatherProducts_select2, configurations_select2, incomeStates_select2) {
        products_select2.val("-1");
        products_select2.change();

        units_select2.val("19");
        units_select2.change();

        fatherProducts_select2.val("-1");
        fatherProducts_select2.change();
        fatherProducts_select2.prop("disabled", true);

        configurations_select2.val("-1");
        configurations_select2.change();
        configurations_select2.prop("disabled", true);

        incomeStates_select2.val("1");
        incomeStates_select2.change();

        $("#Quantity").val("0,00");
        $("#Batch").val("");
        $("#OTNumber").val("");
        $("#ProductNumber").val("");
        $("#OCNumber").val("");
        $("#Weight").val("0");
    }

    function loadUnits_select2(units_select2) {
        $.ajax({
            url: '/Logistics/Income/loadUnits_select2',
            method: 'get',
            dataType: 'json',
        }).done(function (response) {
            units_select2.prop('disabled', false);

            if (response.isValid) {
                units_select2.empty();
                units_select2.append($("<option />").val(-1).text('@localizer["Select unit measure"]'));
                $.each(response.values, function (index, item) {
                    units_select2.append($('<option />', { value: item.value, text: item.text }));
                });

                units_select2.val("19");
                units_select2.change();
            } else {
                units_select2.empty();
                units_select2.prop('disabled', true);
            }
        });
    }

    function loadIncomeStates_select2(incomeStates_select2) {
        $.ajax({
            url: '/Logistics/Income/loadIncomeStates_select2',
            method: 'get',
            dataType: 'json',
        }).done(function (response) {
            incomeStates_select2.prop('disabled', false);

            if (response.isValid) {
                incomeStates_select2.empty();
                incomeStates_select2.append($("<option />").val(-1).text('@localizer["Select income state"]'));
                $.each(response.values, function (index, item) {
                    incomeStates_select2.append($('<option />', { value: item.value, text: item.text }));
                });

                incomeStates_select2.val("1");
                incomeStates_select2.change();

            } else {
                incomeStates_select2.empty();
                incomeStates_select2.prop('disabled', true);
            }
        });
    }

</script>